/******************************************************************************
* This file was generated by ZenStack CLI 2.9.2.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
    models: {
        user: {
            name: 'User', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                }, email: {
                    name: "email",
                    type: "String",
                    isOptional: true,
                }, name: {
                    name: "name",
                    type: "String",
                    isOptional: true,
                }, memberships: {
                    name: "memberships",
                    type: "OrganizationMembership",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, ownedOrganizations: {
                    name: "ownedOrganizations",
                    type: "Organization",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'owner',
                }, lists: {
                    name: "lists",
                    type: "List",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'owner',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        organization: {
            name: 'Organization', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                }, name: {
                    name: "name",
                    type: "String",
                }, memberships: {
                    name: "memberships",
                    type: "OrganizationMembership",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'org',
                }, lists: {
                    name: "lists",
                    type: "List",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'org',
                }, owner: {
                    name: "owner",
                    type: "User",
                    isDataModel: true,
                    backLink: 'ownedOrganizations',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "ownerId" },
                }, ownerId: {
                    name: "ownerId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'owner',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        organizationMembership: {
            name: 'OrganizationMembership', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'memberships',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, org: {
                    name: "org",
                    type: "Organization",
                    isDataModel: true,
                    backLink: 'memberships',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "orgId" },
                }, orgId: {
                    name: "orgId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'org',
                }, role: {
                    name: "role",
                    type: "Role",
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        list: {
            name: 'List', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, org: {
                    name: "org",
                    type: "Organization",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'lists',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "orgId" },
                }, orgId: {
                    name: "orgId",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$List$orgId,
                    isForeignKey: true,
                    relationField: 'org',
                }, owner: {
                    name: "owner",
                    type: "User",
                    isDataModel: true,
                    backLink: 'lists',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "ownerId" },
                }, ownerId: {
                    name: "ownerId",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$List$ownerId,
                    isForeignKey: true,
                    relationField: 'owner',
                }, title: {
                    name: "title",
                    type: "String",
                }, private: {
                    name: "private",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, todos: {
                    name: "todos",
                    type: "Todo",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'list',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        todo: {
            name: 'Todo', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, list: {
                    name: "list",
                    type: "List",
                    isDataModel: true,
                    backLink: 'todos',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "listId" },
                }, listId: {
                    name: "listId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'list',
                }, title: {
                    name: "title",
                    type: "String",
                }, completedAt: {
                    name: "completedAt",
                    type: "DateTime",
                    isOptional: true,
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
    }
    ,
    typeDefs: {
        auth: {
            name: 'Auth', fields: {
                userId: {
                    name: "userId",
                    type: "String",
                }, orgId: {
                    name: "orgId",
                    type: "String",
                    isOptional: true,
                },
            }
            ,
        }
        ,
    }
    ,
    deleteCascade: {
        user: ['Organization', 'OrganizationMembership', 'List'],
        organization: ['OrganizationMembership', 'List'],
        list: ['Todo'],
    }
    ,
    authModel: 'Auth'
};
function $default$List$orgId(user: any): unknown {
    return user?.orgId;
}

function $default$List$ownerId(user: any): unknown {
    return user?.userId;
}
export default metadata;
